package DiskonHarga.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintsDescriptorInitContext;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.runtime.CheckingNodeContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;

public class Harga_Constraints extends BaseConstraintsDescriptor {
  /*package*/ Harga_Constraints(ConstraintsDescriptorInitContext initContext) {
    super(CONCEPTS.Harga$Mi, initContext);
    record(new Price_PD(this));
  }

  /*package*/ static final class Price_PD extends BasePropertyConstraintsDescriptor {
    public Price_PD(ConstraintsDescriptor container) {
      super(PROPS.price$VAiD, container, false, false, true);
    }
    @Override
    public boolean validateValue(SNode node, Object propertyValue, CheckingNodeContext checkingNodeContext) {
      boolean result = staticValidateProperty(node, SPropertyOperations.castInteger(propertyValue));
      if (!(result) && checkingNodeContext != null) {
        checkingNodeContext.setBreakingNode(new SNodePointer("r:3942e82d-f6c7-42a7-a6a3-0ef163d943ed(DiskonHarga.constraints)", "7366529339877842309"));
      }
      return result;
    }
    private static boolean staticValidateProperty(SNode node, int propertyValue) {
      return propertyValue >= 0;
    }
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Harga$Mi = MetaAdapterFactory.getConcept(0x72952a5e6c024ddbL, 0x862b2e9250db5990L, 0x35d3555a0a40efe8L, "DiskonHarga.structure.Harga");
  }

  private static final class PROPS {
    /*package*/ static final SProperty price$VAiD = MetaAdapterFactory.getProperty(0x72952a5e6c024ddbL, 0x862b2e9250db5990L, 0x35d3555a0a40efe8L, 0x35d3555a0a40efebL, "price");
  }
}
