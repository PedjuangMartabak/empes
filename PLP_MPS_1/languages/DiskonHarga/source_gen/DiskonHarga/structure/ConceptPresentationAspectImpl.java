package DiskonHarga.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Diskon;
  private ConceptPresentation props_Harga;
  private ConceptPresentation props_Main;
  private ConceptPresentation props_Market;
  private ConceptPresentation props_Produk;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Diskon:
        if (props_Diskon == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Diskon");
          props_Diskon = cpb.create();
        }
        return props_Diskon;
      case LanguageConceptSwitch.Harga:
        if (props_Harga == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Harga");
          props_Harga = cpb.create();
        }
        return props_Harga;
      case LanguageConceptSwitch.Main:
        if (props_Main == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Main");
          props_Main = cpb.create();
        }
        return props_Main;
      case LanguageConceptSwitch.Market:
        if (props_Market == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Market = cpb.create();
        }
        return props_Market;
      case LanguageConceptSwitch.Produk:
        if (props_Produk == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Produk = cpb.create();
        }
        return props_Produk;
    }
    return null;
  }
}
