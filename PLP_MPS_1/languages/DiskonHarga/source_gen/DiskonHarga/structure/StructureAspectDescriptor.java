package DiskonHarga.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptDiskon = createDescriptorForDiskon();
  /*package*/ final ConceptDescriptor myConceptHarga = createDescriptorForHarga();
  /*package*/ final ConceptDescriptor myConceptMain = createDescriptorForMain();
  /*package*/ final ConceptDescriptor myConceptMarket = createDescriptorForMarket();
  /*package*/ final ConceptDescriptor myConceptProduk = createDescriptorForProduk();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptDiskon, myConceptHarga, myConceptMain, myConceptMarket, myConceptProduk);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Diskon:
        return myConceptDiskon;
      case LanguageConceptSwitch.Harga:
        return myConceptHarga;
      case LanguageConceptSwitch.Main:
        return myConceptMain;
      case LanguageConceptSwitch.Market:
        return myConceptMarket;
      case LanguageConceptSwitch.Produk:
        return myConceptProduk;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForDiskon() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DiskonHarga", "Diskon", 0x72952a5e6c024ddbL, 0x862b2e9250db5990L, 0x35d3555a0a40efe9L);
    b.class_(false, false, false);
    b.origin("r:c316e61a-fa88-4503-ba84-d9896137ee94(DiskonHarga.structure)/3878537549303574505");
    b.version(3);
    b.property("angka", 0x35d3555a0a40efeaL).type(PrimitiveTypeId.INTEGER).origin("3878537549303574506").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHarga() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DiskonHarga", "Harga", 0x72952a5e6c024ddbL, 0x862b2e9250db5990L, 0x35d3555a0a40efe8L);
    b.class_(false, false, false);
    b.origin("r:c316e61a-fa88-4503-ba84-d9896137ee94(DiskonHarga.structure)/3878537549303574504");
    b.version(3);
    b.property("price", 0x35d3555a0a40efebL).type(PrimitiveTypeId.INTEGER).origin("3878537549303574507").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMain() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DiskonHarga", "Main", 0x72952a5e6c024ddbL, 0x862b2e9250db5990L, 0x51a1601f8614f5eaL);
    b.class_(false, false, true);
    b.origin("r:c316e61a-fa88-4503-ba84-d9896137ee94(DiskonHarga.structure)/5882088276832351722");
    b.version(3);
    b.aggregate("toko", 0x51a1601f8614f5ebL).target(0x72952a5e6c024ddbL, 0x862b2e9250db5990L, 0x35d3555a0a40efe1L).optional(false).ordered(true).multiple(true).origin("5882088276832351723").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMarket() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DiskonHarga", "Market", 0x72952a5e6c024ddbL, 0x862b2e9250db5990L, 0x35d3555a0a40efe1L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:c316e61a-fa88-4503-ba84-d9896137ee94(DiskonHarga.structure)/3878537549303574497");
    b.version(3);
    b.aggregate("body", 0x35d3555a0a41b154L).target(0x72952a5e6c024ddbL, 0x862b2e9250db5990L, 0x35d3555a0a40efe3L).optional(false).ordered(true).multiple(true).origin("3878537549303624020").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProduk() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DiskonHarga", "Produk", 0x72952a5e6c024ddbL, 0x862b2e9250db5990L, 0x35d3555a0a40efe3L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:c316e61a-fa88-4503-ba84-d9896137ee94(DiskonHarga.structure)/3878537549303574499");
    b.version(3);
    b.aggregate("price", 0x35d3555a0a41b1c2L).target(0x72952a5e6c024ddbL, 0x862b2e9250db5990L, 0x35d3555a0a40efe8L).optional(false).ordered(true).multiple(false).origin("3878537549303624130").done();
    b.aggregate("discount", 0x35d3555a0a41b223L).target(0x72952a5e6c024ddbL, 0x862b2e9250db5990L, 0x35d3555a0a40efe9L).optional(true).ordered(true).multiple(false).origin("3878537549303624227").done();
    return b.create();
  }
}
